<prog> -> program <identifier> ; var <dec-list> begin <stat-list> end.

<identifier> -> <letter> <identifier-recursion>
<identifier-recursion> -> <letter> <identifier-recursion>
<identifier-recursion> -> <digit> <identifier-recursion>
<identifier-recursion> -> λ

<dec-list> -> <dec> : <type> ;

<dec> -> <identifier> <dec-prime>
<dec-prime> -> , <identifier> <dec-prime>
<dec-prime> -> λ

<type> -> integer

<stat-list> -> <stat> <stat-list-prime>
<stat-list-prime> -> <stat> <stat-list-prime>
<stat-list-prime> -> λ

<stat> -> <write>
<stat> -> <assign>

<write> -> display ( <write-prime> ) ;
<write-prime> -> σ , <identifier>
<write-prime> -> <identifier>

<assign> -> <identifier> = <expr> ;

<expr> -> <term> <expr-prime>
<expr-prime> -> + <term> <expr-prime>
<expr-prime> -> - <term> <expr-prime>
<expr-prime> -> λ

<term> -> <factor> <term-prime>
<term-prime> -> * <factor> <term-prime>
<term-prime> -> / <factor> <term-prime>
<term-prime> -> λ

<factor> -> ( <expr> )
<factor> -> <identifier>
<factor> -> <number>

<number> -> <sign> <digit> <number-recursion>
<number-recursion> -> <digit> <number-recursion>
<number-recursion> -> λ

<sign> -> +
<sign> -> -
<sign> -> λ

<digit> -> 0
<digit> -> 1
<digit> -> 2
<digit> -> 3
<digit> -> 4
<digit> -> 5
<digit> -> 6
<digit> -> 7
<digit> -> 8
<digit> -> 9

<letter> -> p
<letter> -> q
<letter> -> r
<letter> -> s
