C:\Users\Erik\CLionProjects\lrparserassignment\cmake-build-debug\lrparserassignment.exe
Expression:(i+i)*i$

================================
Stack: 0
Popped: 0
Read: (
[0, (] = S4
Push: 0, (, 4
================================
Stack: 0 ( 4
Popped: 4
Read: i
[4, i] = S5
Push: 4, i, 5
================================
Stack: 0 ( 4 i 5
Popped: 5
Read: +
[5, +] = R8
Push: 5
Rule #8: F -> i
Pop 2 times
Stack: 0 ( 4
Popped: 4
[4, F] = 3
Push: 4, F, 3
================================
Stack: 0 ( 4 F 3
Popped: 3
[3, +] = R6
Push: 3
Rule #6: T -> F
Pop 2 times
Stack: 0 ( 4
Popped: 4
[4, T] = 2
Push: 4, T, 2
================================
Stack: 0 ( 4 T 2
Popped: 2
[2, +] = R3
Push: 2
Rule #3: E -> T
Pop 2 times
Stack: 0 ( 4
Popped: 4
[4, E] = 10
Push: 4, E, 10
================================
Stack: 0 ( 4 E 10
Popped: 10
[10, +] = S6
Push: 10, +, 6
================================
Stack: 0 ( 4 E 10 + 6
Popped: 6
Read: i
[6, i] = S5
Push: 6, i, 5
================================
Stack: 0 ( 4 E 10 + 6 i 5
Popped: 5
Read: )
[5, )] = R8
Push: 5
Rule #8: F -> i
Pop 2 times
Stack: 0 ( 4 E 10 + 6
Popped: 6
[6, F] = 3
Push: 6, F, 3
================================
Stack: 0 ( 4 E 10 + 6 F 3
Popped: 3
[3, )] = R6
Push: 3
Rule #6: T -> F
Pop 2 times
Stack: 0 ( 4 E 10 + 6
Popped: 6
[6, T] = 11
Push: 6, T, 11
================================
Stack: 0 ( 4 E 10 + 6 T 11
Popped: 11
[11, )] = R1
Push: 11
Rule #1: E -> E+T
Pop 6 times
Stack: 0 ( 4
Popped: 4
[4, E] = 10
Push: 4, E, 10
================================
Stack: 0 ( 4 E 10
Popped: 10
[10, )] = S15
Push: 10, ), 15
================================
Stack: 0 ( 4 E 10 ) 15
Popped: 15
Read: *
[15, *] = R7
Push: 15
Rule #7: F -> (E)
Pop 6 times
Stack: 0
Popped: 0
[0, F] = 3
Push: 0, F, 3
================================
Stack: 0 F 3
Popped: 3
[3, *] = R6
Push: 3
Rule #6: T -> F
Pop 2 times
Stack: 0
Popped: 0
[0, T] = 2
Push: 0, T, 2
================================
Stack: 0 T 2
Popped: 2
[2, *] = S8
Push: 2, *, 8
================================
Stack: 0 T 2 * 8
Popped: 8
Read: i
[8, i] = S5
Push: 8, i, 5
================================
Stack: 0 T 2 * 8 i 5
Popped: 5
Read: $
[5, $] = R8
Push: 5
Rule #8: F -> i
Pop 2 times
Stack: 0 T 2 * 8
Popped: 8
[8, F] = 13
Push: 8, F, 13
================================
Stack: 0 T 2 * 8 F 13
Popped: 13
[13, $] = R4
Push: 13
Rule #4: T -> T*F
Pop 6 times
Stack: 0
Popped: 0
[0, T] = 2
Push: 0, T, 2
================================
Stack: 0 T 2
Popped: 2
[2, $] = R3
Push: 2
Rule #3: E -> T
Pop 2 times
Stack: 0
Popped: 0
[0, E] = 1
Push: 0, E, 1
================================
Stack: 0 E 1
Popped: 1
[1, $] = ACC

EXPRESSION ACCEPTED

Process finished with exit code 0
